
import os

Import('env')

test_env = env.Clone()

test_env["CC"] = test_env["TESTCC"]
test_env["CXX"] = test_env["TESTCXX"]
test_env["LINK"] = test_env["TESTLINK"]

tests = [ ]
for f in Glob('#unit-tests/*.c'):
    tests.append(os.path.basename(f.rstr()[0:-2]))

testbench_deps = [ "CastorRuntime",
                   "CastorThreadRuntime",
                   "CastorPass",
                   Glob("#unit-tests/*.c") ]

# Compiler pass
test_env.Append(CPPFLAGS = ["-fpass-plugin=$CASTORPASS"])
test_env.Append(LIBPATH = ["${BUILDROOT}/../build/lib/Runtime", \
                           "${BUILDROOT}/../build/lib/ThreadRuntime"])
test_env.Append(LIBS = ["c", "CastorRuntime", "thr", "CastorThreadRuntime"])

for t in tests:
    t = test_env.Program(t, [t+".c"])
    testbench_deps.append(t)

AlwaysBuild(Alias('testbench', testbench_deps, "unit-tests/testbench.py"))

