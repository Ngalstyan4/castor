Stable Release

Integration tests
    -write individuals tests
    -improve test framework with timeouts, error handling, etc. similar to unit and per.
    -put bugs into bug tracker
    -finish read me to include integration tests

Unit tests
    -put bugs into bug tracker

System call survey
    -improve scripts/put in coding covention/etc. to make it easy to see what
     has/has not been implemented.

    -implement remaining system calls which are applicable to normal apps.

Usability survey

    -note any rough edges in common tools and add to bug tracker

Documentation
    -man pages for record.1, replay.1, rrlog.1
    -add simple example app and add to README


--UNIT TESTS TO ADD

  -more complicated pthread tests
    -corner cases for pthread cond variables.

--SYSTEM CALLS TO ADD
-stuff in SYSCALLS_TODO

-look at which pthread stuff hasn't been implemented and support it.

--CLEANUP
    -indentation/spacing is inconsistent.

--FIX
    -fdInfo not threadsafe.
    -currently we don't correctly implement file locking to do this we need to
        -track the inode associated with an fd with fstat on open
        -inherit this through dup/dup2/fcntl in fdinfo.
        -track which inodes are locked through an efficient hash table in
            the shared memory segment.
        -correctly log the order of lock events on inodes through fcntl/flock
            using this.
    -ensure that Castor symbols are either static or prefixed with __rr_ to prevent namespace pollution.

--BUGS
    - exit() doesnt flush io buffers (breaks file redirection and some builds)
    - strerror_r (used in PERROR debug macro) calls stat internally
    - gethostbyname calls _pthread_once directly
    - events_posix semaphor stuff not implemented, needed by Python.
	- Python: "import time" causes core dump, possibly related to semaphore stuff
    - semaphore_producer_consumer test has an event divergence, possibly related to exit bug
    - -lthr works sometime and -lpthread does not, e.g. simple-udp test.
    - valgrind is hanging on replay, would be good to have this working so we can
      catch bugs in Castor with it.

--Other Improvements
    -move to auto generating trivial handlers with simple IDL
    -look into using libc test suite to test castor

