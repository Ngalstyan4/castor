-commit changes to syscalls.master back to freebsd head patch.

-finish pending stuff in syscall list - merge into above stuff
-add flags to support parameters in autogenerate_syscalls.
    -e.g. quirky named calls  SYS___.
    -use return value as logging size.

-check completeness/correctness of SAL handling
    -finish parsing all SAL annotations.
    -finish code gen for all SAL annotations.

-write pass to sanity check SAL annotations, ensure that pointers have an associated
annotation.

-rename to autogen.

#just add comment about this..
-fix errno handling, use success to only check/set errno when needed --- when this is,
can we assume that any function for whome result != -1 is success will set errno on failure?

-go through SYSCALL_TODO, add more unsupported calls, write some unit tests.
-change code to correctly reference events_gen.h in the variant build directory.

-optimize recording of calls e.g. (read, kevent, ...) where we should only log (result) number of entries for a given pointer _Out_ parameter.

-optimize recording of socketlen_t parameters by storing them as values, and other scalar types (e.g. getdirentries), anything that is an _Out_parameter and scalar type, if it
is an aggregate type, check the size and if small enough, shove it into values.

-consider what to do with unsupported calls.

-improve testing.

-teach gen_sal to log iovec's so we can support preadv/readv.

-come up with a theory of passthrough, document it, make sure all calls in passthrough
conform to this theory -- same thing with unsupported.
