#!/usr/local/bin/python 
import sys
import os

rr_path = os.path.dirname(os.path.abspath(os.path.join(__file__ ,'..')))
sysroot_path = os.path.join(rr_path, 'sysroot/usr/amd64-freebsd/')
runtime_path = os.path.join(rr_path, 'build/lib/Runtime/libCastorRuntime.o')
#print "rr_path:", rr_path
#print "sysroot_path:", sysroot_path
#print "runtime_path:", runtime_path

def ok_to_add_stuff(args):
    for arg in args:
        if arg in ['-E','-S','-c']:  #is this is a linker pass?
            return False
        if arg in ['-shared']:
            return False
    return True

def is_library(arg):
    return arg.startswith('-l')

def is_object(arg):
    return arg.endswith('.o')

def insert_runtime(args):
    result = args
    objects = filter(is_object,args)
    if len(objects) > 0:
        result.insert(result.index(objects[0]), runtime_path)
    return result

def insert_libraries(args):
    result = args
    libraries = filter(is_library,args)
    if len(libraries) == 0:       #no libraries, hmmm, skip it
        return result
    if '-lc' in libraries: #insert before libc
        if not ('-lpthread' in libraries):
            result.insert(result.index('-lc'), '-lpthread')
    else:
        if not ('-lpthread' in libraries):
            result.insert(result.index(libraries[-1]) + 1,'-lpthread')
    return result

TEST = False
PT = False   #pass through mode, don't modify anything.
args = sys.argv[1:]
#if ok_to_add_stuff(args):
if 'postgres' in args: #only do this target
    print "Modifying Postgres!"
    args = insert_runtime(args)
    args = insert_libraries(args)
    args = ['-static'] + args #prepend static

#always prepend sysroot
args = ['--sysroot=' + sysroot_path] + args

if PT:
    args = sys.argv[1:]
    args = ['--sysroot=' + sysroot_path] + args

clang = 'clang'
final_args = [clang] + args

if TEST == True:
    print "Would run: ", final_args
else:
    print final_args
    os.execvp(clang,final_args)
