--Usability
    Usability survey -note any rough edges in common tools.
    --USABILITY
    -truss support
    -document how to use a debugger with Castor
    -document rr_assert/rr_printf

    Documentation
	-finish man pages for record.1, replay.1, rrlog.1
	-add instructions on how to build new apps to README.md

--Testing
  -look into using libc test suite to test castor
  -unit tests:
  -more complicated pthread tests
  -corner cases for pthread cond variables.

--Completeness
    -stuff in SYSCALLS_TODO, and PTHREAD_TODO
    -migrate over to using code generation stuff for all eligible calls.

--CLEANUP
    -indentation/spacing is inconsistent.

--FIX
    -fdInfo not threadsafe.
    -currently we don't correctly implement file locking to do this we need to
        -track the inode associated with an fd with fstat on open
        -inherit this through dup/dup2/fcntl in fdinfo.
        -track which inodes are locked through an efficient hash table in
            the shared memory segment.
        -correctly log the order of lock events on inodes through fcntl/flock
            using this.
    -ensure that Castor symbols are either static or prefixed with __rr_ to prevent namespace pollution.

--Other features:
    -Add magic number to log files to improve error reporting for record/replay.
    -Add version number to log files so we can ensure consistency between tools/runtimes on record/replay
   -Add check to ensure that binary has been compiled with Castor pass.


--BUGS
    -getrlimit/setrlimit unit tests pass if we don't interpose on the calls, probably others do too.
    - several unit tests output rediction looks
      like its failing when run by the test harness 
      -- pipe and udp are example.
    - exit() doesnt flush io buffers (breaks file redirection and some builds)
    - strerror_r (used in PERROR debug macro) calls stat internally
    - gethostbyname calls _pthread_once directly
    - events_posix semaphor stuff not implemented, needed by Python.
	- Python: "import time" causes core dump, possibly related to semaphore stuff
    - semaphore_producer_consumer test has an event divergence, possibly related to exit bug
    - -lthr works sometime and -lpthread does not, e.g. simple-udp test.
    - valgrind is hanging on replay, would be good to have this working so we can
      catch bugs in Castor with it.
    -sysV shm resource leaks are super annoying, how can we make this more usable so
    users don't have to constantly be cleaning up leaked resources.
