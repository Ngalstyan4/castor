.\" Text automatically generated by txt2man
.TH replay 1 "03 June 2018" "man" "FreeBSD Reference Manual"
.SH NAME
\fBreplay â€“ replay program execution.
\fB
.SH SYNOPSIS
.nf
.fam C
\fBreplay\fP [\fIoptions\fP] \fIprogram-path\fP [\fIprogram-args\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
The \fBreplay\fP utility is part of the Castor record/\fBreplay\fP system. It replays
program execution from a log which was captured using the \fBrecord\fP(1) utility.
.PP
To do this, the \fBreplay\fP utility spawns a new process to run the program at
\fIprogram-path\fP with \fIprogram-args\fP and loads the castor runtime into the
program's address space at startup. The runtime intercepts all
non-deterministic events and replays them based on contents of
the \fBreplay\fP log which is read in by the \fBreplay\fP process and shared
with the castor runtime through shared memory.
.PP
For example, a system call to \fBread\fP(2) would be intercepted by the castor
runtime, and instead of being performed, the call would be elided, and
the results of the call would be read directly from the log. Consequently,
when examining a replayed application with \fBtruss\fP(1), and comparing it with
the original run, you will notice most system calls do not appear in the trace
on \fBreplay\fP.
.PP
The program binary may be modified between record and \fBreplay\fP time, so long
as the modifications do not introduce new non-determinism. For example, calls
to \fBrr_printf\fP(3) or \fBrr_assert\fP(3) can be added to support debugging at \fBreplay\fP
time.
.SH OPTIONS
.TP
.B
\fB-h\fP
Help
.PP
\fB-o\fP [file] Log file name. (default: default.rr)
.PP
\fB-r\fP [size] Size of shared region memory region used to communicate between record
process and application processes. (default: XXX)
.PP
\fB-e\fP [entries] Number of entries per thread in shared memory queues (default: XXX)
.PP
\fB-c\fP [cores] Maximum number of application cores (default: no core limit)
.PP
\fB-p\fP Pin threads
.PP
\fB-t\fP Stops child process on creation for attaching a debugger in \fBreplay\fP mode
.PP
\fB-i\fP Interactive debug shell
.PP
\fB-s\fP Sandbox replayed child process using \fBcapsicum\fP(4)
.PP
\fB-t\fP Stops child process on creation for attaching a debugger in \fBreplay\fP mode
.SH EXIT STATUS
If an error occurs \fBreplay\fP exits 1, otherwise, it exists with whatever the
exit status of the program being replayed.
.SH COMPATIBILITY
Castor only targets FreeBSD Release 1.2 Stable and beyond.
.SH LIMITATIONS
Castor may not be able to \fBreplay\fP applications that make system calls
directly or that don't build with the castor compiler pass.
.SH SEE ALSO
\fBreplay\fP(1), \fBrrlog\fP(1), \fBrr_printf\fP(3), \fBrr_assert\fP(3)
