
import os

Import('env')

rrperf_env = env.Clone()
perf_env = env.Clone()

rrperfs = [ ]
perfs = [ ]
for f in Glob('#perf/*.c'):
    fn = os.path.basename(f.rstr()[0:-2])
    print fn
    if fn.startswith("rr_"):
        rrperfs.append(fn)
    else:
        perfs.append(fn)

perfbench_deps = [ "#build/lib/Runtime/libCastorRuntime.o",
                   Glob("#perf/*.c") ]

rrperf_env.Append(CPPFLAGS = ["--sysroot=$SYSROOT",
                              "-Xclang", "-load", "-Xclang", "$CASTORPASS"])
rrperf_env.Append(LINKFLAGS = ["-static", "--sysroot=$SYSROOT"])
rrperf_env.Append(LIBS = ["thr", "c"])
perf_env.Append(LIBS = ["thr", "c"])

for t in perfs:
    t = perf_env.Program(t, [ t+".c" ])
    perfbench_deps.append(t)

for t in rrperfs:
    rrperf_env.Depends(t+".o", "CastorPass")
    t = rrperf_env.Program(t, [ "../lib/Runtime/libCastorRuntime.o", t+".c"])
    perfbench_deps.append(t)

AlwaysBuild(Alias('perfbench', perfbench_deps, "perf/perfbench.py"))


